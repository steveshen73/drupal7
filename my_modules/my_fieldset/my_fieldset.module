<?php
#
# a function that builds a drupal form
# with a fieldset
#

function my_fieldset_permission() {
  return array(
    'submit my_fieldset' => array(
      'title' => t('submit my_fieldset'), 
      'description' => t('submit my_fieldset form.'),
    ),
  );
}

function my_fieldset_menu() {
  $items = array();
  $items['my_fieldset/info-form'] = array(
    'title' => t('My first data inserting Drupal form built with fieldset'),
    //'description' => t('My first  Drupal form built with fieldset'),
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'access arguments' => array('access content'),// submit my_fieldset -- using this will have to login to find the form
    'page arguments' => array('my_fieldset_form'),
    
  );
  return $items;
}


# the "callback" function; when the menu item or url is
# accessed, this function will be called
/*--
function my_fieldset_form() {
  return drupal_get_form('my_fieldset_form1');
}
--*/
function my_fieldset_form($form, &$form_state) {

  #--------------------------------------
  # define your drupal 'fieldset' element
  #--------------------------------------
 
  $form['name'] = array(
    '#type' => 'fieldset',
    '#title' => t('Name'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    
  );


  $form['info'] = array(
    '#type' => 'fieldset',
    '#title' => t('Information'),    
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    
  );


   $form['field_address'] = array(
    '#type' => 'fieldset',
    '#title' => t('Address'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  #--------------------------------------------------------
  # create a form element as a sub-array of your
  # top-level fieldset element; notice that this element is
  # declared as "$form['name']['firstname']" -- a sub-array
  # of the fieldset element.
  #--------------------------------------------------------

  $form['name']['firstname'] = array(  
    '#type' => 'textfield',
    '#title' => t('First name'),
    '#default_value' => 'Please type your first name',
    '#required' => TRUE,
  );
  
  #----------------------------------------
  # define another textfield as a sub-array
  # of your fieldset elements
  #----------------------------------------
  $form['name']['lastname'] = array(
    '#type' => 'textfield',
    '#title' => t('Last name'),
    '#required' => TRUE,
  );


  $form['info']['birthday'] = array(
   '#title' => t('Birthdate'),
   '#type' => 'date',
   '#description' => t('Select your birthdate'),
   '#default_value' => array(
     'month' => format_date(time(), 'custom', 'n'), 
     'day' => format_date(time(), 'custom', 'j'), 
     'year' => format_date(time(), 'custom', 'Y'),
   ),
  );



  $form['field_address']['address'] = array(
    '#type' => 'textfield',
    '#title' => t('Address'),
    '#required' => TRUE,
  );
   $form['field_address']['city'] = array(
    '#type' => 'textfield',
    '#title' => t('City'),
    '#required' => TRUE,
  );
   $form['field_address']['state'] = array(
    '#type' => 'textfield',
    '#title' => t('State'),
    '#required' => TRUE,
  );
     $form['field_address']['zip_code'] = array(
    '#type' => 'textfield',
    '#title' => t('Zip Code'),
    '#required' => TRUE,
  );

  #------------------------
  # a typical submit button 
  #------------------------
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );


  return $form;
}

function my_fieldset_form_validate($form, &$form_state){

}

function my_fieldset_form_submit($form, &$form_state) {
    //need to use .install file to setup table first?

    $birthday = $form_state['values']['birthday']['month'].'/'.$form_state['values']['birthday']['day']. '/'.$form_state['values']['birthday']['year'];
    $id = db_insert("my_fieldset")
        ->fields(array(
         'firstname' => $form_state['values']['firstname'],
         'lastname' => $form_state['values']['lastname'],
         'birthday' => strtotime($birthday),
         'address' => $form_state['values']['address'],
         'city' => $form_state['values']['city'],
         'state' => $form_state['values']['state'],
         'zip_code' => $form_state['values']['zip_code'],
           ))
       ->execute();

    drupal_set_message(t('The form has been submitted.'));
    // the message will be shown on the redirected node page which is node/3592 under the title of the node
    // if using redirect under the drupal set message function
    $form_state['redirect'] = 'node/3592';

    //the following redirect will redirect the submission page to 'node/3592?foo=bar#baz'
    /*--
    $form_state['redirect'] = array(
         'node/3592',
         array('query' => array(
                                 'foo' => 'bar',
                                ),
        'fragment' => 'baz',
        ),
      );
    --*/
}


